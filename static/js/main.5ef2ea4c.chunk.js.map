{"version":3,"sources":["Contexts/MainContext.js","Utils/Helpers.js","Components/Select/FontCategory.js","Components/Select/Sidebar.js","Components/Select/Selected.js","Components/Select/Search.js","Components/Select/Select.js","Components/Generate.js","Components/Router.js","App.js","index.js"],"names":["createContext","data","tmp","setData","pathToRegexp","require","MatchRoute","routes","path","matched","result","forEach","route","keys","match","exec","props","map","key","i","name","React","cloneElement","component","NavigateTo","callback","state","title","url","window","history","pushState","FontCategory","toggleSelection","icon","icons","category","index","findIndex","properties","selectedIcon","undefined","selected","context","selIndex","s","code","splice","push","setIcons","setSelected","limit","this","mounted","metadata","replace","setState","interval","setInterval","setTimeout","clearInterval","old","keyword","toLowerCase","filter","toString","indexOf","length","className","slice","data-code","onClick","viewBox","width","paths","j","d","Component","contextType","MainContext","Sidebar","ac","activeCategory","setActiveCategory","Selected","removeIcon","document","querySelector","click","id","Object","cat","Fragment","Search","search","val","type","onKeyUp","e","target","value","Select","navigate","navTo","solid","regular","light","brands","Generate","updateCode","hexValue","_icons","parseInt","download","jsonStr","JSON","stringify","generateJSON","element","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","removeChild","parse","k","flat","codes","duplicates","Set","item","includes","pattern","onChange","href","rel","Router","selectRouteComponent","matchedComponent","App","setRouteFromURL","pathname","location","FaBrands","FaSolid","FaRegular","FaLight","customicons","onpopstate","evt","console","log","page_name","Provider","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5ef2ea4c.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport default createContext({\r\n    data: [],\r\n    tmp: [1,2,3],\r\n    setData: () => {}\r\n});","import React from 'react';\r\nconst { pathToRegexp } = require(\"path-to-regexp\");\r\n\r\nexport const MatchRoute = (routes, path) => {\r\n    let matched = false;\r\n    let result = null;\r\n\r\n    routes.forEach(route => {\r\n        if (!matched) {\r\n            let keys = [];\r\n            let regexp = pathToRegexp(route.path, keys);\r\n            let match = regexp.exec(path);\r\n\r\n            if (match !== null) {\r\n                matched = true;\r\n                //console.log(`Match found: ${route.path} == ${path}`);\r\n                let props = keys.map((key, i) => {\r\n                    return {\r\n                        [key.name]: match[i + 1]\r\n                    }\r\n                })\r\n\r\n                result = React.cloneElement(route.component, ...props);\r\n            }\r\n        }\r\n    })\r\n\r\n    return result;\r\n}\r\n\r\nexport const NavigateTo = (path, callback) => {\r\n    const state = { 'page_name': path };\r\n    const title = path;\r\n    const url = path;\r\n    window.history.pushState(state, title, url);\r\n\r\n    callback();\r\n}","import React, { Component } from 'react';\r\nimport MainContext from '../../Contexts/MainContext';\r\n\r\nexport default class FontCategory extends Component {\r\n    static contextType = MainContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            icons: [],\r\n            limit: 5\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n\r\n        this.category = this.props.category.metadata.name.replace('fa-', '');\r\n\r\n        this.mounted && this.setState({ icons: [...this.props.category.icons] })\r\n\r\n        // optimization - staggered icon load\r\n        let interval = setInterval(() => {\r\n            this.mounted && this.setState({ limit: this.state.limit + 5 })\r\n        }, 10)\r\n        \r\n        setTimeout(() => {\r\n            clearInterval(interval);\r\n            this.mounted && this.setState({ limit: 2000 })\r\n        }, 500)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    componentDidUpdate(old) {\r\n        if (old.keyword === this.props.keyword) return;\r\n        let keyword = this.props.keyword.toLowerCase();\r\n\r\n        if (keyword !== '') {\r\n\r\n            let icons = [...this.props.category.icons].filter(icon => {\r\n                if (icon.properties.code.toString(16).indexOf(keyword) > -1) {\r\n                    return true\r\n                }\r\n                if (icon.properties.name.indexOf(keyword) > -1) {\r\n                    return true\r\n                }\r\n                return false;\r\n            })\r\n\r\n            this.setState({ icons: icons });\r\n        } else {\r\n            this.setState({ icons: [...this.props.category.icons] });\r\n        }\r\n    }\r\n\r\n    toggleSelection = (icon) => {\r\n        let icons = [...this.props.category.icons];\r\n        //console.log(icons[0])\r\n        let index = icons.findIndex(i => i.properties.name === icon.properties.name);\r\n        let selectedIcon = icons[index].selected !== undefined;\r\n\r\n        let selected = { ...this.context.selected }\r\n\r\n        if (selectedIcon) {\r\n            delete icons[index].selected;\r\n\r\n            let selIndex = selected[this.category].findIndex(s => s.properties.code === icon.properties.code);\r\n            selected[this.category].splice(selIndex, 1);\r\n        } else {\r\n            icons[index]['selected'] = true;\r\n\r\n            selected[this.category].push(icon)\r\n        }\r\n\r\n        this.context.setIcons({ [this.category]: icons })\r\n        this.context.setSelected(selected);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.icons.length > 0 && <div className={`${this.props.name.toLowerCase()} icons`}>\r\n                    <div className=\"name\">\r\n                        <h3>{this.props.name}</h3>\r\n                    </div>\r\n                    <ul className=\"icon-list\">\r\n                        {this.state.icons.slice(0, this.state.limit).map((icon, i) => (\r\n                            <li data-code={icon.properties.code} key={i}\r\n                                onClick={() => this.toggleSelection(icon)}\r\n                                className={icon.selected ? 'active' : ''}>\r\n                                <svg viewBox={`0 0 ${icon.icon.width || 1024} 1024`}>\r\n                                    {icon.icon.paths.map((path, j) => (\r\n                                        <path key={j} d={path} />\r\n                                    ))}\r\n                                </svg>\r\n                                <span>{icon.properties.name || \"\"}</span>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>}\r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport MainContext from '../../Contexts/MainContext';\r\n\r\nexport default class Sidebar extends Component {\r\n    static contextType = MainContext;\r\n\r\n    render() {\r\n        let ac = this.context.activeCategory;\r\n        return (\r\n            <aside>\r\n                <ul>\r\n                    <li onClick={() => this.context.setActiveCategory('all')} className={ac === 'all' ? 'active' : ''}>All</li>\r\n                    <li onClick={() => this.context.setActiveCategory('solid')} className={ac === 'solid' ? 'active' : ''}>Solid</li>\r\n                    <li onClick={() => this.context.setActiveCategory('regular')} className={ac === 'regular' ? 'active' : ''}>Regular</li>\r\n                    <li onClick={() => this.context.setActiveCategory('light')} className={ac === 'light' ? 'active' : ''}>Light</li>\r\n                    <li onClick={() => this.context.setActiveCategory('brands')} className={ac === 'brands' ? 'active' : ''}>Brands</li>\r\n                </ul>\r\n            </aside>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport MainContext from '../../Contexts/MainContext';\r\n\r\nexport default class Selected extends Component {\r\n    static contextType = MainContext;\r\n\r\n    removeIcon = (category, icon) => {\r\n        let iconELem = document.querySelector(`.${category}.icons ul li[data-code=\"${icon.properties.code}\"]`);\r\n        iconELem.click();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section id=\"selected\">\r\n                {Object.keys(this.context.selected).map((cat, i) => (\r\n                    <React.Fragment key={i}>\r\n                        {this.context.selected[cat].length > 0 && <div className={`${cat} category`} key={i}>\r\n                            <h5>{cat}</h5>\r\n                            <ul>\r\n                                {this.context.selected[cat].map((icon, j) => (\r\n                                    <li key={j} onClick={() => this.removeIcon(cat, icon)}>\r\n                                        <svg viewBox={`0 0 ${icon.icon.width || 1024} 1024`}>\r\n                                            {icon.icon.paths.map((path, j) => (\r\n                                                <path key={j} d={path} />\r\n                                            ))}\r\n                                        </svg>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>}\r\n                    </React.Fragment>\r\n                ))}\r\n            </section>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport MainContext from '../../Contexts/MainContext';\r\n\r\nexport default class Search extends Component {\r\n    static contextType = MainContext;\r\n\r\n\r\n    search = (val) => {\r\n        this.context.search(val);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section id=\"search\">\r\n                <input type=\"text\" onKeyUp={(e) => this.search(e.target.value)} />\r\n            </section>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport MainContext from '../../Contexts/MainContext';\r\nimport FontCategory from \"./FontCategory\";\r\nimport Sidebar from './Sidebar';\r\nimport Selected from './Selected';\r\nimport Search from './Search';\r\n\r\nimport { NavigateTo } from './../../Utils/Helpers';\r\n\r\nexport default class Select extends Component {\r\n    static contextType = MainContext;\r\n\r\n    navigate = (path) => {\r\n        NavigateTo(path, () => {\r\n            this.context.navTo(path);\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        let ac = this.context.activeCategory;\r\n        return (\r\n            <div id=\"selection\">\r\n                <Search />\r\n\r\n                <Sidebar />\r\n\r\n                <section id=\"icons\">\r\n                    {(ac === 'all' || ac === 'solid') && <FontCategory keyword={this.context.keyword} name=\"Solid\" category={this.context.solid} />}\r\n                    {(ac === 'all' || ac === 'regular') && <FontCategory keyword={this.context.keyword} name=\"Regular\" category={this.context.regular} />}\r\n                    {(ac === 'all' || ac === 'light') && <FontCategory keyword={this.context.keyword} name=\"Light\" category={this.context.light} />}\r\n                    {(ac === 'all' || ac === 'brands') && <FontCategory keyword={this.context.keyword} name=\"Brands\" category={this.context.brands} />}\r\n                </section>\r\n\r\n                <Selected />\r\n\r\n                <button id=\"generate\" onClick={() => this.navigate('generate')}>\r\n                    Generate\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport MainContext from '../Contexts/MainContext';\r\nimport { NavigateTo } from './../Utils/Helpers';\r\n\r\nexport default class Generate extends Component {\r\n    static contextType = MainContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            icons: []\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n        let icons = JSON.parse(JSON.stringify(Object.keys(this.context.selected).map(k => this.context.selected[k]).flat()));\r\n\r\n        let codes = icons.map(icon => icon.properties.code);\r\n\r\n        let duplicates = [...new Set(codes.filter((item, index) => codes.indexOf(item) !== index))];\r\n\r\n        //console.log(icons);\r\n        if (this.mounted) {\r\n            this.setState({ icons, duplicates });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    navigate = (path) => {\r\n        NavigateTo(path, () => {\r\n            this.context.navTo(path);\r\n        })\r\n    }\r\n\r\n    updateCode = (index, hexValue) => {\r\n        let _icons = [...this.state.icons];\r\n        _icons[index].properties.code = parseInt(hexValue, 16);\r\n        this.setState({ icons: _icons });\r\n    }\r\n\r\n    download = () => {\r\n        let jsonStr = JSON.stringify(this.generateJSON());\r\n\r\n        var element = document.createElement('a');\r\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(jsonStr));\r\n        element.setAttribute('download', 'icomoon.json');\r\n        element.style.display = 'none';\r\n        document.body.appendChild(element);\r\n        element.click();\r\n        document.body.removeChild(element);\r\n    }\r\n\r\n    generateJSON = () => {\r\n        return {\r\n            \"IcoMoonType\": \"selection\",\r\n            \"icons\": this.state.icons,\r\n            \"height\": 1024,\r\n            \"metadata\": {\r\n                \"name\": \"icomoon\",\r\n                \"designer\": \"Rohan Gaikwad\"\r\n            },\r\n            \"preferences\": {\r\n                \"showGlyphs\": true,\r\n                \"showCodes\": true,\r\n                \"showQuickUse\": true,\r\n                \"showQuickUse2\": true,\r\n                \"showSVGs\": true,\r\n                \"fontPref\": {\r\n                    \"prefix\": \"fa-\",\r\n                    \"metadata\": {\r\n                        \"fontFamily\": \"icomoon\",\r\n                        \"majorVersion\": 1,\r\n                        \"minorVersion\": 0,\r\n                        \"designer\": \"Rohan Gaikwad\"\r\n                    },\r\n                    \"metrics\": {\r\n                        \"emSize\": 1024,\r\n                        \"baseline\": 6.25,\r\n                        \"whitespace\": 50\r\n                    },\r\n                    \"embed\": false,\r\n                    \"noie8\": true,\r\n                    \"ie7\": false,\r\n                    \"showSelector\": false,\r\n                    \"showMetrics\": false,\r\n                    \"showMetadata\": true,\r\n                    \"showVersion\": true\r\n                },\r\n                \"imagePref\": {\r\n                    \"prefix\": \"fa-\",\r\n                    \"png\": true,\r\n                    \"useClassSelector\": true,\r\n                    \"color\": 0,\r\n                    \"bgColor\": 16777215\r\n                },\r\n                \"historySize\": 50\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"generate-bundle\">\r\n                <h1>Generate</h1>\r\n\r\n                <section id=\"glyphs\">\r\n                    <h2>Selected Icons</h2>\r\n                    <ul>\r\n                        {this.state.icons.map((icon, i) => (\r\n                            <li key={i} className={this.state.duplicates.includes(icon.properties.code) ? 'duplicate' : ''}>\r\n                                <svg viewBox={`0 0 ${icon.icon.width || 1024} 1024`}>\r\n                                    {icon.icon.paths.map((path, j) => (\r\n                                        <path key={j} d={path} />\r\n                                    ))}\r\n                                </svg>\r\n                                <input pattern=\"[a-fA-F0-9]\" type=\"text\" value={icon.properties.code.toString(16)} onChange={(e) => this.updateCode(i, e.target.value)} />\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </section>\r\n\r\n                <button id=\"select\" onClick={() => this.navigate('/')}>\r\n                    Select More\r\n                </button>\r\n                <button id=\"download\" onClick={() => this.download()}>\r\n                    Download\r\n                </button>\r\n\r\n                <a href=\"https://icomoon.io/app/#/projects\" target=\"_blank\" rel=\"noreferrer\">Import downloaded file on Icomoon</a>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { MatchRoute } from './../Utils/Helpers';\r\nimport MainContext from './../Contexts/MainContext';\r\n\r\nimport Select from './Select/Select';\r\nimport Generate from './Generate';\r\n\r\n\r\n\r\nexport default class Router extends Component {\r\n    static contextType = MainContext;\r\n\r\n    selectRouteComponent = (path) => {\r\n\r\n        // default component\r\n        let component = <Select />\r\n\r\n        let routes = [\r\n            { path: '', component: <Select /> },\r\n            { path: '/', component: <Select /> },\r\n            { path: 'generate', component: <Generate /> },\r\n        ]\r\n\r\n        let matchedComponent = MatchRoute(routes, path);\r\n        if (matchedComponent !== null) {\r\n            component = matchedComponent;\r\n        }\r\n\r\n        return component;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>{this.selectRouteComponent(this.context.route)}</>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\nimport MainContext from './Contexts/MainContext';\n\nimport { NavigateTo } from './Utils/Helpers';\n\nimport Router from './Components/Router';\n\nimport FaBrands from './Data/FaBrands.json';\nimport FaLight from './Data/FaLight.json';\nimport FaSolid from './Data/FaSolid.json';\nimport FaRegular from './Data/FaRegular.json';\n\nexport default class App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            route: '/',\n            brands: FaBrands,\n            solid: FaSolid,\n            regular: FaRegular,\n            light: FaLight,\n            activeCategory: 'all',\n            customicons: [],\n            keyword: '',\n            selected: {\n                solid: [],\n                regular: [],\n                light: [],\n                brands: []\n            }\n        }\n    }\n\n    componentDidMount() {\n        window.onpopstate = (evt) => {\n            console.log(evt);\n            console.log(this.state.route);\n\n            if (evt.state) {\n                let path = evt.state.page_name;\n                NavigateTo(path, () => {\n                    evt.state.page_name && this.setState({ route: path });\n                    console.log(this.state.route);\n                })\n            }\n        }\n\n        this.setRouteFromURL();\n    }\n\n    setRouteFromURL = () => {\n        let pathname = window.location.pathname;\n        let path = pathname.length < 2 ? pathname : pathname.replace(/^\\//, '').replace(/\\/$/, '');\n\n        NavigateTo(path, () => {\n            this.setState({ route: path });\n        })\n    }\n\n    render() {\n        return (\n            <MainContext.Provider value={{\n                brands: this.state.brands,\n                solid: this.state.solid,\n                regular: this.state.regular,\n                light: this.state.light,\n                setIcons: (key, data) => this.setState({ [key]: data }),\n\n                selected: this.state.selected,\n                setSelected: (data) => this.setState({ selected: data }),\n\n                customicons: this.state.customicons,\n                activeCategory: this.state.activeCategory,\n                setActiveCategory: (name) => this.setState({ activeCategory: name }),\n                keyword: this.state.keyword,\n                search: (data) => this.setState({ keyword: data }),\n\n                route: this.state.route,\n                navTo: (path) => this.setState({ route: path })\n            }}>\n                <Router />\n            </MainContext.Provider>\n        )\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\nimport './Styles/style.scss';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals(console.log);\n"],"sourceRoot":""}